import React, { useState, useEffect } from "react";
import { Search, ShoppingCart, User, Menu, X, Heart } from "lucide-react";
import { Link } from "react-router-dom";
import "./topbar.css";

const Header = () => {
Â  const [isMenuOpen, setIsMenuOpen] = useState(false);
Â  const [isScrolled, setIsScrolled] = useState(false);
Â  const [showTopBar, setShowTopBar] = useState(true);
Â  const [lastScrollY, setLastScrollY] = useState(0);
Â  const SCROLL_THRESHOLD = 50;

Â  // Scroll behavior for hide/show topbar
Â  useEffect(() => {
Â  Â  let ticking = false;
Â  Â  const handleScroll = () => {
Â  Â  Â  const currentScrollY = window.scrollY;

Â  Â  Â  if (!ticking) {
Â  Â  Â  Â  window.requestAnimationFrame(() => {
Â  Â  Â  Â  Â  const delta = currentScrollY - lastScrollY;

Â  Â  Â  Â  Â  if (delta > SCROLL_THRESHOLD && showTopBar && currentScrollY > 50) {
Â  Â  Â  Â  Â  Â  setShowTopBar(false);
Â  Â  Â  Â  Â  } else if (delta < -SCROLL_THRESHOLD && !showTopBar) {
Â  Â  Â  Â  Â  Â  setShowTopBar(true);
Â  Â  Â  Â  Â  }

Â  Â  Â  Â  Â  setIsScrolled(currentScrollY > 20);
Â  Â  Â  Â  Â  setLastScrollY(currentScrollY);
Â  Â  Â  Â  Â  ticking = false;
Â  Â  Â  Â  });
Â  Â  Â  Â  ticking = true;
Â  Â  Â  }
Â  Â  };

Â  Â  window.addEventListener("scroll", handleScroll, { passive: true });
Â  Â  return () => window.removeEventListener("scroll", handleScroll);
Â  }, [lastScrollY, showTopBar]);

Â  // Reduce sparkles on mobile
Â  const sparkleCount = window.innerWidth < 768 ? 30 : 100;

Â  return (
Â  Â  <header
Â  Â  Â  className={`sticky top-0 z-50 transition-all duration-500 ${
Â  Â  Â  Â  isScrolled
Â  Â  Â  Â  Â  ? "glass backdrop-blur-xl shadow-luxury"
Â  Â  Â  Â  Â  : "bg-white/95 backdrop-blur-sm"
Â  Â  Â  }`}
Â  Â  >
Â  Â  Â  {/* Futuristic Top Bar (This is fine as it's fully contained) */}
Â  Â  Â  <div
Â  Â  Â  Â  className={`metallic-bar w-full relative overflow-hidden py-2 transition-transform duration-300 ease-in-out ${
Â  Â  Â  Â  Â  showTopBar ? "translate-y-0" : "-translate-y-full"
Â  Â  Â  Â  }`}
Â  Â  Â  >
Â  Â  Â  Â  <div className="relative overflow-hidden">
Â  Â  Â  Â  Â  {Array.from({ length: sparkleCount }).map((_, i) => {
Â  Â  Â  Â  Â  Â  const size = Math.floor(Math.random() * 4) + 2;
Â  Â  Â  Â  Â  Â  const top = Math.floor(Math.random() * 100);
Â  Â  Â  Â  Â  Â  const left = Math.floor(Math.random() * 100);
Â  Â  Â  Â  Â  Â  const delay1 = (Math.random() * 10).toFixed(1) + "s";
Â  Â  Â  Â  Â  Â  const delay2 = (Math.random() * 2).toFixed(1) + "s";
Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  key={i}
Â  Â  Â  Â  Â  Â  Â  Â  className="sparkle absolute rounded-full bg-white opacity-80 animate-twinkle"
Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  width: `${size}px`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  height: `${size}px`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  top: `${top}%`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  left: `${left}%`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  animationDelay: `${delay1}, ${delay2}`,
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  ></div>
Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  })}

Â  Â  Â  Â  Â  <div className="animate-scroll whitespace-nowrap flex">
Â  Â  Â  Â  Â  Â  {Array.from({ length: 20 }).map((_, i) => (
Â  Â  Â  Â  Â  Â  Â  <span key={i} className="futuristic-text mx-8 text-sm font-bold">
Â  Â  Â  Â  Â  Â  Â  Â  {i % 2 === 0
Â  Â  Â  Â  Â  Â  Â  Â  Â  ? "âœ¨ Free shipping on orders above â‚¹999!"
Â  Â  Â  Â  Â  Â  Â  Â  Â  : "âš¡ Use Code: WELCOME10 & Unlock 10% Savings On Your First Order! ðŸŽ‰"}
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>

Â  Â  Â  {/* Main Header Container */}
Â  Â  Â  <div className="max-w-full w-full mx-auto px-4 overflow-x-hidden">
Â  Â  Â  Â  <div className="flex items-center justify-between py-4">

Â  Â  Â  Â  Â  {/* Â  Â  Â  Â  Â  Â  LOGO CONTAINER 
Â  Â  Â  Â  Â  Â  Now using one component that scales, reducing complexity.
Â  Â  Â  Â  Â  */}
Â  Â  Â  Â  Â  <div className="flex items-center flex-shrink-0 xl:ml-20">
Â  Â  Â  Â  Â  Â  <Link to="/home" className="flex items-center whitespace-nowrap group">
Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  src="https://bvnjxbbwxsibslembmty.supabase.co/storage/v1/object/public/product-images/logo.png"
Â  Â  Â  Â  Â  Â  Â  Â  alt="Tamoor Logo"
Â  Â  Â  Â  Â  Â  Â  Â  className="w-10 h-10 md:w-12 md:h-12 xl:w-16 xl:h-16 object-contain mr-2 transition-transform duration-300 group-hover:scale-110"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  <h1 className="text-3xl md:text-4xl xl:text-6xl font-serif font-bold tamoor-gradient mr-2">
Â  Â  Â  Â  Â  Â  Â  Â  TAMOOR
Â  Â  Â  Â  Â  Â  Â  </h1>
Â  Â  Â  Â  Â  Â  Â  {/* Premium tag visible from sm screens onwards, larger on desktop */}
Â  Â  Â  Â  Â  Â  Â  <span className="hidden sm:inline-block text-xs xl:text-base text-luxury-gold font-serif font-medium bg-luxury-gold/10 px-2 xl:px-3 py-0.5 xl:py-1 rounded-full">
Â  Â  Â  Â  Â  Â  Â  Â  Premium
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  </div>


Â  Â  Â  Â  Â  {/* Â  Â  Â  Â  Â  Â  DESKTOP NAVIGATION & SEARCH BAR GROUP 
Â  Â  Â  Â  Â  Â  Hidden until the XL breakpoint (1280px) to prevent tablet overflow.
Â  Â  Â  Â  Â  */}
Â  Â  Â  Â  Â  <div className="hidden xl:flex items-center space-x-8 flex-grow justify-end min-w-0">
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* Desktop Navigation */}
Â  Â  Â  Â  Â  Â  <nav className="flex items-center space-x-8 flex-shrink-0">
Â  Â  Â  Â  Â  Â  Â  {[
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Home", href: "/" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Products", href: "/products" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Categories", href: "/categories" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "About", href: "/about" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Contact", href: "/contact" },
Â  Â  Â  Â  Â  Â  Â  ].map((item) => (
Â  Â  Â  Â  Â  Â  Â  Â  <a
Â  Â  Â  Â  Â  Â  Â  Â  Â  key={item.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  href={item.href}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-neutral-800 hover:text-luxury-gold font-semibold transition-all duration-300 relative group whitespace-nowrap"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  {item.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-luxury-gold to-luxury-gold-light transition-all duration-300 group-hover:w-full"></span>
Â  Â  Â  Â  Â  Â  Â  Â  </a>
Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  </nav>

Â  Â  Â  Â  Â  Â  {/* Search Bar */}
Â  Â  Â  Â  Â  Â  <div className="flex items-center glass rounded-full px-4 py-2 w-full max-w-xs flex-shrink group hover:shadow-lg transition-all duration-300">
Â  Â  Â  Â  Â  Â  Â  <Search className="w-5 h-5 text-neutral-400 mr-3 group-hover:text-luxury-gold transition-colors duration-300 flex-shrink-0" />
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Search premium dry fruits..."
Â  Â  Â  Â  Â  Â  Â  Â  className="bg-transparent flex-1 outline-none text-sm text-neutral-700 placeholder-neutral-400 min-w-0"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>


Â  Â  Â  Â  Â  {/* Â  Â  Â  Â  Â  Â  RIGHT ICONS & MENU BUTTON 
Â  Â  Â  Â  Â  Â  Must be flex-shrink-0 to guarantee visibility.
Â  Â  Â  Â  Â  */}
Â  Â  Â  Â  Â  <div className="flex items-center space-x-1 sm:space-x-2 md:space-x-3 flex-shrink-0 xl:mr-24">
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* Search Icon (Visible on Tablet/MD screens to replace search bar) */}
Â  Â  Â  Â  Â  Â  <button className="xl:hidden p-1 sm:p-3 hover:bg-luxury-gold/10 rounded-full transition-all duration-300 flex-shrink-0">
Â  Â  Â  Â  Â  Â  Â  <Search className="w-4 h-4 sm:w-7 sm:h-7 text-neutral-700 hover:text-luxury-gold transition-colors duration-300" />
Â  Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  Â  {/* Common Icons (Wishlist, User, Cart) */}
Â  Â  Â  Â  Â  Â  {[
Â  Â  Â  Â  Â  Â  Â  { icon: Heart, count: null, to: "/wishlist" },
Â  Â  Â  Â  Â  Â  Â  { icon: User, count: null, to: "/profile" },
Â  Â  Â  Â  Â  Â  Â  { icon: ShoppingCart, count: 0, to: "/cart" },
Â  Â  Â  Â  Â  Â  ].map(({ icon: Icon, count, to }, index) => (
Â  Â  Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  Â  Â  key={index}
Â  Â  Â  Â  Â  Â  Â  Â  to={to}
Â  Â  Â  Â  Â  Â  Â  Â  className={`p-1 sm:p-3 hover:bg-luxury-gold/10 rounded-full transition-all duration-300 relative group flex-shrink-0 ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  index === 2 ? "cart-button" : ""
Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <Icon className="w-4 h-4 sm:w-7 sm:h-7 text-neutral-700 group-hover:text-luxury-gold transition-colors duration-300" />
Â  Â  Â  Â  Â  Â  Â  Â  {count !== null && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="absolute -top-2 -right-2 bg-gradient-to-r from-luxury-gold to-luxury-gold-light text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-medium shadow-lg">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {count}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  ))}

Â  Â  Â  Â  Â  Â  {/* Mobile Menu Button - Visible up to large screens */}
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  className="xl:hidden p-2 sm:p-3 hover:bg-luxury-gold/10 rounded-full transition-all duration-300"
Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsMenuOpen(!isMenuOpen)}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Mobile Menu (Visible up to large screens) */}
Â  Â  Â  Â  {isMenuOpen && (
Â  Â  Â  Â  Â  <div className="xl:hidden py-6 border-t border-neutral-200/50 animate-slide-up">
Â  Â  Â  Â  Â  Â  <div className="flex flex-col space-y-6">
Â  Â  Â  Â  Â  Â  Â  {/* Search bar for mobile menu */}
Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center glass rounded-full px-4 py-2 w-full">
Â  Â  Â  Â  Â  Â  Â  Â  <Search className="w-5 h-5 text-neutral-400 mr-3" />
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Search premium dry fruits..."
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="bg-transparent flex-1 outline-none text-neutral-700 placeholder-neutral-400"
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  {/* Navigation links for mobile menu */}
Â  Â  Â  Â  Â  Â  Â  {[
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Home", href: "/" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Products", href: "/products" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Categories", href: "/categories" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "About", href: "/about" },
Â  Â  Â  Â  Â  Â  Â  Â  { name: "Contact", href: "/contact" },
Â  Â  Â  Â  Â  Â  Â  ].map((item) => (
Â  Â  Â  Â  Â  Â  Â  Â  <a
Â  Â  Â  Â  Â  Â  Â  Â  Â  key={item.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  href={item.href}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-neutral-700 hover:text-luxury-gold font-medium transition-colors duration-300 py-2"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  {item.name}
Â  Â  Â  Â  Â  Â  Â  Â  </a>
Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}
Â  Â  Â  </div>
Â  Â  </header>
Â  );
};

export default Header;